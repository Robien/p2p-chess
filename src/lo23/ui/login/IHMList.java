/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package lo23.ui.login;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import lo23.data.ApplicationModel;
import lo23.data.Game;
import lo23.data.Invitation;
import lo23.data.Profile;
import lo23.data.PublicProfile;
import lo23.data.managers.GameManagerInterface;
import lo23.data.managers.ProfileManagerInterface;
import lo23.data.ApplicationModel;
import lo23.ui.login.mockManager.CommManagerMock;
import lo23.ui.login.mockManager.GameManagerMock;
import lo23.ui.login.mockManager.ProfileManagerMock;
import lo23.utils.Enums;
import lo23.utils.JTableButtonMouseListener;
import lo23.utils.JTableButtonRenderer;

/**
 *
 * @author pat
 */
public class IHMList extends javax.swing.JFrame implements PropertyChangeListener {


    
    private static IhmLoginModel model;
    public static String TITLE = "Players list";

    /**
     * Creates new form IHMListe
     */
    public IHMList(final IhmLoginModel model) {
        // model.addPropertyChangeListener(this);

        IHMList.model = model;
        
        for(PublicProfile p : model.getApplicationModel().getPManager().getLocalPublicProfiles()){
            PropertyChangeEvent evt = new PropertyChangeEvent("1",IhmLoginModel.ADD_PLAYER_CONNECTED,null,p);
            model.propertyChange(evt);
        }
        
        initComponents();       
        this.setLocationRelativeTo(null); //On centre la fenêtre sur l'écran
        this.setTitle(TITLE);
         // Ajoute un listener sur tous les GameBtn
        ArrayList<JButton> listGameBtn = model.getListPlayGameBtn();
        for (JButton btn : listGameBtn) {
            btn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    GameBtnActionPerformed(evt);
                }
            });
        }
        
       tablePlayers.removeColumn(tablePlayers.getColumn("id"));
       tablePlayers.addMouseListener(new MouseAdapter() {
           @Override
            public void mouseClicked(MouseEvent me) {
                int num = tablePlayers.rowAtPoint(me.getPoint());
                String id = (String)tablePlayers.getModel().getValueAt(0,num);
                PublicProfile profileSelected = model.getRemoteProfile(id);
                if(profileSelected != null){
                    new IhmProfileWindow(model,IhmProfileWindow.READ,profileSelected);
                }
                else
                    JOptionPane.showMessageDialog(IHMList.this, "User doesn't exist anymore", "User error", JOptionPane.ERROR_MESSAGE);
            }
        });
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        
        panelTablePlayers = new javax.swing.JScrollPane();
        tablePlayers = new javax.swing.JTable();
        //getContentPane().add(new JScrollPane(tablePlayers), BorderLayout.CENTER);
        labelTable = new javax.swing.JLabel();
        manageProfileBtn = new javax.swing.JButton();
        javax.swing.JButton disconnectBtn = new javax.swing.JButton();
        reviewGamesBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 600));

        tablePlayers.setModel(model.getPlayerModel());
	tablePlayers.getColumn("").setCellRenderer(new JTableButtonRenderer());
        tablePlayers.setAutoCreateRowSorter(true);
        tablePlayers.addMouseListener(new JTableButtonMouseListener(tablePlayers));
        panelTablePlayers.setViewportView(tablePlayers);
       
        labelTable.setText("Liste des joueurs connectés");
        manageProfileBtn.setText("Gérer son profil");
        manageProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageProfileBtnActionPerformed(evt);
            }
        });

        disconnectBtn.setText("Disconnect");
        disconnectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectBtnActionPerformed(evt);
            }
        });

        reviewGamesBtn.setText("Review games");
        reviewGamesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewGamesBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTablePlayers, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTable)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(manageProfileBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reviewGamesBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(disconnectBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(labelTable, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTablePlayers, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manageProfileBtn)
                    .addComponent(disconnectBtn)
                    .addComponent(reviewGamesBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void disconnectBtnActionPerformed(java.awt.event.ActionEvent evt) {                                              
        
        IhmLoginModel ihmLoginModel = new IhmLoginModel(model.getApplicationModel());
        
        this.dispose();
        
        new IhmConnexionWindow(ihmLoginModel).setVisible(true);
    }                                             

    private void manageProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        new IhmProfileWindow(model,IhmProfileWindow.MODIFY,null).setVisible(true);
    }                                                

    private void reviewGamesBtnActionPerformed(java.awt.event.ActionEvent evt) {                                               
        this.setEnabled(false);
        new IhmListGames(model, this).setVisible(true);
    } 
    
    private void GameBtnActionPerformed(java.awt.event.ActionEvent evt) {  
        String id;
        JButton btn = (JButton) evt.getSource();
        id = (String) btn.getClientProperty("id");
        System.out.println("click  game btn avec comme name = " + id);
        //PublicProfile profile = model.getRemoteProfile(id);
        model.sendInvitation(id, Enums.COLOR.WHITE);
        
    } 
    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //Instantiate DataManager
                ApplicationModel appModel = new ApplicationModel();
                appModel.setComManager(new CommManagerMock(appModel));
                appModel.setGameManager((new GameManagerMock((appModel))));
                appModel.setProfileManager(new ProfileManagerMock(appModel));
                //Instantiate IhmLoginModel
                IhmLoginModel ihmLoginModel = new IhmLoginModel(appModel);
                new IHMList(ihmLoginModel).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JLabel labelTable;
    private javax.swing.JButton manageProfileBtn;
    private javax.swing.JScrollPane panelTablePlayers;
    private javax.swing.JButton reviewGamesBtn;
    private javax.swing.JTable tablePlayers;
    // End of variables declaration

    @Override
    public void propertyChange(PropertyChangeEvent pce) {
        System.out.println("property change");
        System.out.println(pce.getPropertyName());
    }
}
